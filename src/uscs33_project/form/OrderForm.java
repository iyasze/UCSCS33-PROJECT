/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uscs33_project.form;

import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.*;
import java.text.SimpleDateFormat;
import java.util.*;
import java.nio.file.*;
import java.io.*;
import javax.swing.JOptionPane;
import javax.swing.event.*;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ddela
 */
public class OrderForm extends javax.swing.JFrame {

    /**
     * Creates new form OrderForm
     */
    public OrderForm() {
        initComponents();
        
        // Set time
        Calendar getDate = Calendar.getInstance(); // Get current date
        SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy"); // Set date format
        jLabel5.setText(date.format(getDate.getTime())); // Set date to the label
        
        jLabel11.setText("0.00");
        jLabel12.setText("0.00");
        jLabel13.setText("0.00");
        jLabel16.setText("0.00");
    }
    
    public void calculateAll() {
        
        double subtotal = 0;   
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            Object totalObj = jTable1.getValueAt(i, 4);
            try {
                subtotal += Double.parseDouble(totalObj.toString());
            } catch (Exception e) {
                // Skip invalid entries (log if needed)
            }
        }
        double tax = 0.1 * subtotal;
        double shipping = 8.00;
        double total = subtotal + tax + shipping;
        
        jLabel11.setText(String.format("%.2f", subtotal));
        jLabel12.setText(String.format("%.2f", tax));
        jLabel13.setText(String.format("%.2f", shipping));
        jLabel16.setText(String.format("%.2f", total));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(660, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDER FORM");
        jLabel1.setToolTipText("");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 660, 80));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(660, 700));

        jLabel3.setBackground(new java.awt.Color(204, 204, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Date");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("<html><b>MakLuv Cosmetics</b><br>Jalan Senangin 17/2a,<br>Seksyen 17, 40200 Shah Alam,<br>Selangor<br><i>Phone: 03-80816768</i></html>");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("<html><b>Vendor_Name</b><br>Jalan Pinang 18/2<br>Seksyen 18, 40200 Shah Alam,<br>Selangor<br><i>Phone: 03-78879440</i></html>");

        jTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},  // row 1
                {null, null, null, null},
            },
            new String [] {
                "Product", "Quantity", "Price", "Total"
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setPreferredSize(new java.awt.Dimension(660, 300));
        jTable1.setRowSelectionAllowed(false);
        jTable1.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setBackground(new java.awt.Color(204, 204, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("jLabel5");
        jLabel5.setMaximumSize(new java.awt.Dimension(64, 23));
        jLabel5.setMinimumSize(new java.awt.Dimension(64, 23));
        jLabel5.setPreferredSize(new java.awt.Dimension(64, 23));

        button1.setBackground(new java.awt.Color(204, 204, 255));
        button1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        button1.setLabel("Add Row");
        button1.setPreferredSize(new java.awt.Dimension(50, 17));
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Additional Instructions");

        jTextArea1.setBackground(new java.awt.Color(235, 235, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setPreferredSize(new java.awt.Dimension(232, 60));
        jScrollPane2.setViewportView(jTextArea1);

        jLabel7.setBackground(new java.awt.Color(204, 204, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("Tax");

        jLabel8.setBackground(new java.awt.Color(204, 204, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Shipping");

        jLabel9.setBackground(new java.awt.Color(204, 204, 255));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Subtotal");

        jLabel10.setBackground(new java.awt.Color(204, 204, 255));
        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("Total");

        jLabel11.setText("subtotal");

        jLabel12.setText("tax");

        jLabel13.setText("shipping");

        jLabel14.setText("jLabel14");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setText("Submit Order");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setText("Total");

        jLabel16.setText("total");

        jButton2.setBackground(new java.awt.Color(235, 235, 255));
        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setText("<html><center>SEND ORDER</center></html>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(235, 235, 255));
        jButton3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jButton3.setText("ADMIN PAGE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(42, 42, 42)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel14))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)))))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(696, 696, 696))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(690, 690, 690)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel14))
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        jLabel5.getAccessibleContext().setAccessibleDescription("");
        button1.getAccessibleContext().setAccessibleDescription("");
        jLabel11.getAccessibleContext().setAccessibleName("subtotalLabel");
        jLabel12.getAccessibleContext().setAccessibleName("taxLabel");
        jLabel13.getAccessibleContext().setAccessibleName("shippingLabel");
        jLabel16.getAccessibleContext().setAccessibleName("totalLabel");

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 660, 560));
        jPanel1.getAccessibleContext().setAccessibleName("subtotalLable");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
        table.addRow(new Object[] {null, null, null, null, null}); // Add row when button is clicked
    }//GEN-LAST:event_button1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DefaultTableModel model = new DefaultTableModel(
            new Object[][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String[] {
                "Brand", "Product", "Quantity", "Price", "Total"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0 || column == 1 || column == 2;
            }
        };
        jTable1.setModel(model);
        
        // Set columns
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(110);  // Set column width
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(220);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(110);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(110);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(110);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer(); // Align the table header as center
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        for (int i = 1; i < 5; i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        calculateAll();
        
        // Read products and prices from text file
        Map<String, List<String>> brandProduct = new HashMap<>();
        Map<String, Double> productPrice = new HashMap<>();
        Path file = Paths.get("src/uscs33_project/form/ProductnPrices.txt");
        InputStream input = null;
        try {
            input = Files.newInputStream(file);
            BufferedReader reader = new BufferedReader(new InputStreamReader(input));
            String line;
            while ((line = reader.readLine()) != null) {
                String[] productDetails = line.split("\\|");
                String brand = productDetails[0].trim();
                String product = productDetails[1].trim();
                Double price = Double.parseDouble(productDetails[2].trim());
                
                productPrice.put(product, price);
                if (!brandProduct.containsKey(brand)) {
                    brandProduct.put(brand, new ArrayList<>()); // Create a new list if the brand 
                }                                               // is not in the list
                brandProduct.get(brand).add(product);                
            }
        }
        catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
        }
        
        TableColumn brandColumn = jTable1.getColumnModel().getColumn(0);
        JComboBox<String> brandCB = new JComboBox(brandProduct.keySet().toArray(new String[0]));
        brandColumn.setCellEditor(new DefaultCellEditor(brandCB));
        
        TableColumn productColumn = jTable1.getColumnModel().getColumn(1); // Get the product column
        JComboBox<String> productCB = new JComboBox<>();
        productColumn.setCellEditor(new DefaultCellEditor(productCB)); // Add combo box to the first column

        brandCB.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                String selectedBrand =(String) brandCB.getSelectedItem();
                productCB.removeAllItems();
                
                if (selectedBrand != null && brandProduct.containsKey(selectedBrand)) {
                    for (String product : brandProduct.get(selectedBrand)) {
                        productCB.addItem(product);
                    }
                    
                    int row = jTable1.getEditingRow();
                    if (row == -1) {
                        jTable1.setValueAt(null, row, 1);
                        jTable1.setValueAt(null, row, 2);
                        jTable1.setValueAt(null, row, 3);
                        jTable1.setValueAt(null, row, 4);
                    }
                }
            }
        });
        
        ActionListener PCBListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (productCB.getSelectedIndex() == -1) return;
                String selectedProduct = (String) productCB.getSelectedItem();

                if (selectedProduct != null && productPrice.containsKey(selectedProduct)) {
                    double price = productPrice.get(selectedProduct);

                    int row = jTable1.getSelectedRow(); // Get the selected row
                    if (row != -1) {
                        jTable1.setValueAt(1, row, 2);
                        jTable1.setValueAt(price, row, 3); // Update price in second column
                        jTable1.setValueAt(1 * price, row, 4);
                    }    
                } 
                else {
                    System.out.println("Selected product not found in price map: " + selectedProduct);
                }
            }
        };
        
        jTable1.getModel().addTableModelListener(new TableModelListener() {
            //boolean isUpdating = false;
            @Override
            public void tableChanged(TableModelEvent e) {
                //if (isUpdating) return;
                //isUpdating = true;
                
                int row = e.getFirstRow();
                int column = e.getColumn();

                if (column == 2 && row >= 0) { // Check if it's the quantity column
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

                    Object quantityObj = model.getValueAt(row, 2); // Get quantity entered by user
                    Object productObj = model.getValueAt(row, 1); // Get product selected by user

                    if (productObj != null && productPrice.containsKey(productObj.toString())) {
                        try {
                            int quantity = Integer.parseInt(quantityObj.toString());

                            if (quantity < 1) {
                                throw new NumberFormatException(); // Force catch block
                            }

                            double price = productPrice.get(productObj.toString());
                            double total = quantity * price;
                            
                            model.setValueAt(price, row, 3);  // Price column
                            model.setValueAt(String.format("%.2f", total), row, 4);  // Total column
                            
                            /*if (jTable1.getCellEditor() != null) {
                                jTable1.getCellEditor().stopCellEditing();
                            }*/
                            
                            
                        } catch (NumberFormatException ex) {
                            //JOptionPane.showMessageDialog(null, "Please enter a positive integer.", "Error!", JOptionPane.ERROR_MESSAGE);
                            model.setValueAt("", row, 2); // Clear invalid quantity
                            model.setValueAt("", row, 3); // Clear price
                            model.setValueAt("", row, 4); // Clear total 
                        }
                        catch(Exception eZ){
                            System.out.println("CANT DO ANYTHING");
                        }
                        finally{
                            //isUpdating = false;
                        }
                        calculateAll();
                    }
                }
            }
        });
    }//GEN-LAST:event_formWindowOpened
    
    public void updateStockFile(Path filePath) throws IOException {
    // Read all lines from the original file
    List<String> fileLines = Files.readAllLines(filePath);
    
    // Get stock updates from the table {ProductName -> QuantityToAdd}
    Map<String, Integer> stockUpdates = new HashMap<>();
    for (int i = 0; i < jTable1.getRowCount(); i++) {
        Object productObj = jTable1.getValueAt(i, 1);  // Product column
        Object quantityObj = jTable1.getValueAt(i, 2); // Quantity column
        
        if (productObj != null && quantityObj != null) {
            try {
                stockUpdates.put(
                    productObj.toString(), 
                    Integer.parseInt(quantityObj.toString())
                );
            } catch (NumberFormatException e) {
                System.err.println("Invalid quantity in row " + i);
            }
        }
    }

    // Update stock values in the file
    List<String> updatedLines = new ArrayList<>();
    for (String line : fileLines) {
        if (line.contains("|")) {
            String[] parts = line.split("\\|");
            String productName = parts[2].trim();
            
            if (stockUpdates.containsKey(productName)) {
                // Update stock (current stock + new quantity)
                int currentStock = Integer.parseInt(parts[1].trim());
                int newStock = currentStock + stockUpdates.get(productName);
                parts[1] = String.valueOf(newStock);
                updatedLines.add(String.join("|", parts));
            } else {
                updatedLines.add(line); // No change
            }
        } else {
            updatedLines.add(line); // Header/footer lines
        }
    }

    // Write back to file
    Files.write(filePath, updatedLines, StandardOpenOption.TRUNCATE_EXISTING);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Path stockFile = Paths.get("src/uscs33_project/main/products.txt");
        JOptionPane.showConfirmDialog(null, "Submit your order?", "Order", JOptionPane.YES_NO_OPTION);
        
        try{
            updateStockFile(stockFile);
            JOptionPane.showMessageDialog(null, "STOCK UPDATED!!!!");
        }
        catch(IOException e ){
            System.out.println("FILE NOT FOUND NOOOO");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        adminpage2 admin = new adminpage2();
        admin.setLocationRelativeTo(this);
        admin.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
